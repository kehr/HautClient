#!/usr/bin/env python
# coding:utf-8
# Contributor:
#      Phus Lu        <phus.lu@gmail.com>
#      kehr           <kehr.china@gmail.com>
__version__ = '0.1'


HAUTCLIENT_LOGO_DATA="""
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

"""
import sys
import os
import re
import thread
import base64
import platform
import subprocess,signal

try:
    import pygtk
    pygtk.require('2.0')
    import gtk
    gtk.gdk.threads_init()
except Exception:
    sys.exit(os.system(u'gdialog --title "Hautclient" --msgbox "\u8bf7\u5b89\u88c5 python-gtk2" 15 60'.encode(sys.getfilesystemencoding() or sys.getdefaultencoding(), 'replace')))
try:
    import pynotify
    pynotify.init('HautClient Notify')
except ImportError:
    pynotify = None
try:
    import appindicator
except ImportError:
    appindicator = None
try:
    import vte
except ImportError:
    sys.exit(gtk.MessageDialog(None, gtk.DIALOG_MODAL, gtk.MESSAGE_ERROR, gtk.BUTTONS_OK, u'请安装 python-vte').run())


def spawn_later(seconds, target, *args, **kwargs):
    def wrap(*args, **kwargs):
        import time
        time.sleep(seconds)
        return target(*args, **kwargs)
    return thread.start_new_thread(wrap, args, kwargs)


def drop_desktop():
    filename = os.path.abspath(__file__)
    dirname = os.path.dirname(filename)
    DESKTOP_FILE = '''\
#!/usr/bin/env xdg-open
[Desktop Entry]
Type=Application
Name=HautClient
Comment=HautClient Launcher
Categories=Network;
Exec=/usr/bin/env python "%s"
Icon=%s/hautclient-logo.png
Terminal=false
StartupNotify=true
''' % (filename, dirname)
    for dirname in map(os.path.expanduser, ['~/Desktop', u'~/桌面']):
        if os.path.isdir(dirname):
            filename = os.path.join(dirname, 'hautclient.desktop')
            with open(filename, 'w') as fp:
                fp.write(DESKTOP_FILE)
            os.chmod(filename, 0755)


def should_visible():
    import ConfigParser
    ConfigParser.RawConfigParser.OPTCRE = re.compile(r'(?P<option>[^=\s][^=]*)\s*(?P<vi>[=])\s*(?P<value>.*)$')
    config = ConfigParser.ConfigParser()
    config.read(['proxy.ini', 'proxy.user.ini'])
    visible = config.has_option('listen', 'visible') and config.getint('listen', 'visible')
    return visible

def get_abs_filepath(str):
	return os.path.join(os.path.abspath(os.path.dirname(__file__)), str)


class HautClient:



    #excute_file = os.path.join(os.path.abspath(os.path.dirname(__file__)), 'extend/excute.py')
    excute_file = get_abs_filepath('extend/excute.py')
    exit_file = get_abs_filepath('extend/exit.py')
    command = ['/usr/bin/env','python',excute_file]
    command_exit = ['/usr/bin/env','python',exit_file]
    message = u'Hautclient 已经启动，单击托盘图标可以最小化!'
    fail_message = u'HautClient 启动失败，请查看控制台窗口的错误信息!'

    def __init__(self, window, terminal):
        self.window = window
        self.window.set_size_request(652, 447)
        self.window.set_position(gtk.WIN_POS_CENTER)
        self.window.connect('delete-event',self.delete_event)
        self.terminal = terminal

        for cmd in ('python2.7', 'python27', 'python2'):
            if os.system('which %s' % cmd) == 0:
                self.command[1] = cmd
                self.command_exit[1] = cmd
                break

        self.window.add(terminal)
        self.childpid = self.terminal.fork_command(self.command[0], self.command, os.getcwd())
        

        if self.childpid > 0:
            pass
            #self.childexited = self.terminal.connect('child-exited', self.on_child_exited)
            #self.window.connect('delete-event', lambda w, e: gtk.main_quit())
        else:
            self.childexited = None
        self.childexited = None

        spawn_later(0.5, self.show_startup_notify)

     #   if should_visible():
     #       self.window.show_all()
     	self.window.show_all()

        logo_filename = get_abs_filepath('hautclient-logo.png')
        
        if not os.path.isfile(logo_filename):
            with open(logo_filename, 'wb') as fp:
                fp.write(base64.b64decode(HAUTCLIENT_LOGO_DATA))
        
        self.window.set_icon_from_file(logo_filename)

        if appindicator:
            self.trayicon = appindicator.Indicator('HautClient', 'indicator-messages', appindicator.CATEGORY_APPLICATION_STATUS)
            self.trayicon.set_status(appindicator.STATUS_ACTIVE)
            self.trayicon.set_attention_icon('indicator-messages-new')
            self.trayicon.set_icon(logo_filename)
            self.trayicon.set_menu(self.make_menu())
        else:
            self.trayicon = gtk.StatusIcon()
            self.trayicon.set_from_file(logo_filename)
            self.trayicon.connect('popup-menu', lambda i, b, t: self.make_menu().popup(None, None, gtk.status_icon_position_menu, b, t, self.trayicon))
            self.trayicon.connect('activate', self.show_hide_toggle)
            self.trayicon.set_tooltip('Hautclient')
            self.trayicon.set_visible(True)


    def make_menu(self):
        menu = gtk.Menu()
        itemlist = [(u'\u767b\u5f55\u4fe1\u606f', self.on_show),
                    (u'\u9690\u85cf\u4fe1\u606f', self.on_hide),
                    (u'   \u767b\u9646', self.on_reload),
                    (u'   \u505c\u6b62', self.on_stop),
                    (u'   \u9000\u51fa', self.on_quit)]
        for text, callback in itemlist:
            item = gtk.MenuItem(text)
            item.connect('activate', callback)
            item.show()
            menu.append(item)
        menu.show()
        return menu

    def show_notify(self, message=None, timeout=None):
        if pynotify and message:
            notification = pynotify.Notification('Hautclient Notify', message)
            notification.set_hint('x', 200)
            notification.set_hint('y', 400)
            if timeout:
                notification.set_timeout(timeout)
            notification.show()

    def show_startup_notify(self):
        if self.check_child_exists():
            self.show_notify(self.message, timeout=3)

    def check_child_exists(self):
        if self.childpid <= 0:
            return False
        cmd = 'ps -p %s' % self.childpid
        lines = os.popen(cmd).read().strip().splitlines()
        if len(lines) < 2:
            return False
        return True

    def on_child_exited(self, term):
        if self.terminal.get_child_exit_status() == 0:
            gtk.main_quit()
        else:
            self.show_notify(self.fail_message)

    def on_show(self, widget, data=None):
        self.window.show_all()
        self.window.present()
        self.terminal.feed('\r')

    def on_hide(self, widget, data=None):
        self.window.hide_all()

    def on_stop(self, widget, data=None):
       if self.childexited:
           self.terminal.disconnect(self.childexited)
       os.system('kill -9 %s' % self.childpid)
       self.childpid = self.terminal.fork_command(self.command_exit[0], self.command_exit, os.getcwd())

    def on_reload(self, widget, data=None):
        if self.childexited:
            self.terminal.disconnect(self.childexited)
        os.system('kill -9 %s' % self.childpid)
        self.on_show(widget, data)
        #self.childpid = self.terminal.fork_command(self.command_exit[0], self.command_exit, os.getcwd())
        self.childpid = self.terminal.fork_command(self.command[0], self.command, os.getcwd())
        #self.childexited = self.terminal.connect('child-exited', lambda term: gtk.main_quit())

    def show_hide_toggle(self, widget, data= None):
        if self.window.get_property('visible'):
            self.on_hide(widget, data)
        else:
            self.on_show(widget, data)

    def delete_event(self, widget, data=None):
        self.on_hide(widget, data)
        # 默认最小化至托盘
        return True

    def on_quit(self, widget, data=None):
    	self.childpid = self.terminal.fork_command(self.command_exit[0], self.command_exit, os.getcwd())
        gtk.main_quit()



def main():

    # __file__ 脚本所在相对路径 

    global __file__
    __file__ = os.path.abspath(__file__) #获取文件所在绝对路径

    if os.path.islink(__file__):
        __file__ = getattr(os, 'readlink', lambda x: x)(__file__)
    
    # 切换到当前工作目录
    os.chdir(os.path.dirname(os.path.abspath(__file__)))

    if not os.path.exists('hautclient-logo.png'):
        # first run and drop shortcut to desktop
        drop_desktop()

    window = gtk.Window()
    terminal = vte.Terminal()
    HautClient(window, terminal)
    gtk.main()
    

if __name__ == '__main__':
    main()
